AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  TemplateBucketRegion:
    Type: String
    Default: ap-northeast-1
    
  #TemplateBucketFolder:
  #  Type: String
  #  Default: saa-01-004
    
  Prefix:
    Type: String
    Default: saa-01-004
    
  #PrefixCommon:
  #  Type: String
  #  Default: saa-01-004
    
  AvailabilityZone1:
    Type: String
    Default: a
    
  AvailabilityZone2:
    Type: String
    Default: c
    
  AvailabilityZone3:
    Type: String
    Default: d
    
  DBAllocatedStorage:
    Type: Number
    Default: 20
    
  DBEngine:
    Type: String
    Default: mysql
    
  DBEngineVersion:
    Type: String
    Default: 8.0.27
    
  DBInstanceClass:
    Type: String
    Default: db.t4g.micro
    
  DBName:
    Type: String
    Default: testdb
    
  DBMasterUsername:
    Type: String
    Default: testuser
    
  DBMasterUserPassword:
    Type: String
    Default: Passw0rd
    
  HTTPSPort:
    Type: Number
    Default: 443
    
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    #Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    
  InstanceType:
    Type: String
    Default: t4g.nano
    #Default: t3a.nano
    
  LambdaRuntime:
    Type: String
    Default: python3.8
    
  LambdaTimeout:
    Type: Number
    Default: 10
    
  MySQLPort:
    Type: Number
    Default: 3306
    
  SourceDBInstanceIdentifier:
    Type: String
    Default: saa-01-004-1-dbinstance
    
  SourceDBInstanceRegion:
    Type: String
    Default: ap-northeast-1
    
    
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${TemplateBucketRegion}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: !Ref AvailabilityZone1
        AvailabilityZone2: !Ref AvailabilityZone2
        AvailabilityZone3: !Ref AvailabilityZone3
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        HTTPSPort: !Ref HTTPSPort
        MySQLPort: !Ref MySQLPort
        Prefix: !Sub "${Prefix}-2"
        VPCCidrBlock: 10.0.0.0/16
        
  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${TemplateBucketRegion}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
        InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
        #Prefix: !Ref Prefix
        #PrivateRouteTable1: !GetAtt VPCStack.Outputs.PrivateRouteTable1
        RouteTable: !GetAtt VPCStack.Outputs.RouteTable
        #PrivateSubnet1: !GetAtt VPCStack2.Outputs.PrivateSubnet1
        #PrivateSubnet2: !GetAtt VPCStack2.Outputs.PrivateSubnet2
        #PrivateSubnet: !GetAtt VPCStack2.Outputs.PrivateSubnet1
        #PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
      - EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${TemplateBucketRegion}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        #BucketArn: !GetAtt S3Stack.Outputs.BucketArn
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
        InstanceType: !Ref InstanceType
        #Prefix: !Ref Prefix
        #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        #PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        #PrivateSubnet: !GetAtt VPCStack.Outputs.PrivateSubnet
        
  RDSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${TemplateBucketRegion}.amazonaws.com/${Prefix}/${Prefix}-rds-2.yaml"
      Parameters:
        AvailabilityZone: !Ref AvailabilityZone2
        DBAllocatedStorage: !Ref DBAllocatedStorage
        DBEngine: !Ref DBEngine
        DBEngineVersion: !Ref DBEngineVersion
        DBInstanceClass: !Ref DBInstanceClass
        #DBInstanceIdentifier: !Sub "${Prefix}-dbinstance3"
        DBName: !Ref DBName
        DBMasterUsername: !Ref DBMasterUsername
        DBMasterUserPassword: !Ref DBMasterUserPassword
        #DBSecurityGroup: !GetAtt VPCStack.Outputs.DBSecurityGroup
        DBSubnet1: !GetAtt VPCStack.Outputs.DBSubnet1
        DBSubnet2: !GetAtt VPCStack.Outputs.DBSubnet2
        #DBSubnetGroup: !GetAtt RDSCommonStack.Outputs.DBSubnetGroup
        #ImageId: !Ref ImageId
        #InstanceProfile: !GetAtt RDSCommonStack.Outputs.InstanceProfile
        #InstanceSecurityGroup: !GetAtt VPCStack2.Outputs.InstanceSecurityGroup
        #InstanceType: !Ref InstanceType
        #LicenseModel: general-public-license
        Port: !Ref MySQLPort
        Prefix: !Sub "${Prefix}-2"
        #PrivateSubnet: !GetAtt VPCStack2.Outputs.PrivateSubnet1
        #PrivateSubnet2: !GetAtt VPCStack2.Outputs.PrivateSubnet2
        SourceDBInstanceIdentifier: !Ref SourceDBInstanceIdentifier
        SourceDBInstanceRegion: !Ref SourceDBInstanceRegion
        VPC: !GetAtt VPCStack.Outputs.VPC
        
  CustomResourceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - RDSStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${TemplateBucketRegion}.amazonaws.com/${Prefix}/${Prefix}-customresource.yaml"
      Parameters:
        DBInstance: !GetAtt RDSStack.Outputs.DBInstance
        DBSecurityGroup: !GetAtt VPCStack.Outputs.DBSecurityGroup
        Prefix: !Sub "${Prefix}-2"
        Runtime: !Ref LambdaRuntime
        Timeout: !Ref LambdaTimeout