AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Prefix:
    Type: String
    Default: saa-01-08

  AZ1:
    Type: String
    Default: ap-northeast-1a
    
  AZ2:
    Type: String
    Default: ap-northeast-1c
    
  BottlePort:
    Type: Number
    Default: 8080


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  IGW:
    Type: AWS::EC2::InternetGateway
  
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AZ1
      
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AZ2
      
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref VPC
      AvailabilityZone: ap-northeast-1a
      AvailabilityZone: !Ref AZ1
      
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.4.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AZ2

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  
  RouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable
      
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Prefix}-WebSecurityGroup
      GroupDescription: Allow ICMP, SSH and HTTP(8080/tcp).
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: !Ref BottlePort
          ToPort: !Ref BottlePort
          CidrIp: 0.0.0.0/0
    
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Prefix}-DBSecurityGroup
      GroupDescription: Allow MySQL Only.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          #CidrIp: 0.0.0.0/0
          SourceSecurityGroupId: !Ref WebSecurityGroup
          
          
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub ${Prefix}-VPC
      
  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Prefix}-PublicSubnet1
      
  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Prefix}-PublicSubnet2
      
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet1
      
  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet2
      
  WebSecurityGroup:
    Value: !Ref WebSecurityGroup
    Export:
      Name: !Sub ${Prefix}-WebSecurityGroup
      
  DBSecurityGroup:
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub ${Prefix}-DBSecurityGroup
      
  AZ1:
    Value: !Ref AZ1
    Export:
      Name: !Sub ${Prefix}-AZ1
      
  AZ2:
    Value: !Ref AZ2
    Export:
      Name: !Sub ${Prefix}-AZ2
  
  BottlePort:
    Value: !Ref BottlePort
    Export:
      Name: !Sub ${Prefix}-BottlePort
