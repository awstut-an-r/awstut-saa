AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Prefix:
    Type: String
    Default: saa-03-05
    
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: MyKeyPair
    
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2


Resources:
  PublicInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - config1
            - config2
        config1:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack = ${AWS::StackName}
                region = ${AWS::Region}
                interval = 1
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers = post.update
                path = Resources.PublicInstance.Metadata.AWS::CloudFormation::Init
                action = /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource PublicInstance --region ${AWS::Region}
                runas = root
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        config2:
          commands:
            001yum:
              command: yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm
            002yum:
              command: yum install -y mysql-community-client
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref LatestAmiId
      InstanceType: t3.nano
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId:
            Fn::ImportValue: !Sub ${Prefix}-PublicSubnet
          GroupSet:
            - !Ref PublicInstanceSecurityGroup
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y aws-cfn-bootstrap
            
            /opt/aws/bin/cfn-init -v \
            --stack ${AWS::StackName} \
            --resource PublicInstance \
            --region ${AWS::Region}
            --configsets default
            
  PublicInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: instance-sg
      GroupDescription: Allow ICMP, SSH.
      VpcId:
        Fn::ImportValue: !Sub ${Prefix}-VPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22 
          ToPort: 22 
          CidrIp: 0.0.0.0/0
    
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
      Policies:
        - PolicyName: KMSFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "kms:*"
                Resource: '*'
      
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
        
        
Outputs:
  PublicInstanceSecurityGroup:
    Value: !Ref PublicInstanceSecurityGroup
    Export:
      Name: !Sub ${Prefix}-PublicInstanceSecurityGroup
