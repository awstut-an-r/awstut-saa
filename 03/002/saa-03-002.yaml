AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: saa-03-002
    
  AvailabilityZone:
    Type: String
    Default: a
    
  CidrIp:
    Type: String
    Default: 10.0.1.0/24

  HTTPPort:
    Type: Number
    Default: 80
    
  HTTPSPort:
    Type: Number
    Default: 443
  
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2

  InstanceType:
    Type: String
    Default: t4g.nano

  VPCCidrBlock:
    Type: String
    Default: 10.0.0.0/16
  

Resources:
  VPC1Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc-01.yaml"
      Parameters:
        AvailabilityZone: !Ref AvailabilityZone
        CidrIp: !Ref CidrIp
        HTTPPort: !Ref HTTPPort
        Prefix: !Ref Prefix
        VPCCidrBlock: !Ref VPCCidrBlock
        
  VPC1EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPC1Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc-01-endpoint.yaml"
      Parameters:
        PrivateRouteTable: !GetAtt VPC1Stack.Outputs.PrivateRouteTable
        VPC: !GetAtt VPC1Stack.Outputs.VPC
        
  VPC1EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPC1EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc-01-ec2.yaml"
      Parameters:
        HTTPPort: !Ref HTTPPort
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPC1Stack.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        Prefix: !Ref Prefix
        PrivateSubnet: !GetAtt VPC1Stack.Outputs.PrivateSubnet
        VPC: !GetAtt VPC1Stack.Outputs.VPC
        
  VPC1NLBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPC1EC2Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc-01-nlb.yaml"
      Parameters:
        Instance: !GetAtt VPC1EC2Stack.Outputs.Instance
        HTTPPort: !Ref HTTPPort
        Prefix: !Ref Prefix
        PrivateSubnet: !GetAtt VPC1Stack.Outputs.PrivateSubnet
        VPC: !GetAtt VPC1Stack.Outputs.VPC
        
  VPC2Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc-02.yaml"
      Parameters:
        AvailabilityZone: !Ref AvailabilityZone
        CidrIp: !Ref CidrIp
        HTTPPort: !Ref HTTPPort
        HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: !Ref VPCCidrBlock
        
  VPC2EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPC2Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc-02-endpoint.yaml"
      Parameters:
        SSMEndpointSecurityGroup: !GetAtt VPC2Stack.Outputs.SSMEndpointSecurityGroup
        NLBEndpointSecurityGroup: !GetAtt VPC2Stack.Outputs.NLBEndpointSecurityGroup
        PrivateSubnet: !GetAtt VPC2Stack.Outputs.PrivateSubnet
        VPC: !GetAtt VPC2Stack.Outputs.VPC
        VPCEndpointService: !GetAtt VPC1NLBStack.Outputs.VPCEndpointService
        
  VPC2EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPC2Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc-02-ec2.yaml"
      Parameters:
        HTTPPort: !Ref HTTPPort
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPC2Stack.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        Prefix: !Ref Prefix
        PrivateSubnet: !GetAtt VPC2Stack.Outputs.PrivateSubnet
        VPC: !GetAtt VPC2Stack.Outputs.VPC
